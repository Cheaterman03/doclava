=Doclava=

Doclava is a custom javadoc doclet used to generate documentation. Doclava was forked from the Android build system for use on any Java project, and is used to generate the Android SDK.

Key differences between Doclava and the standard doclet include:
  * Ability to embed javadocs in a larger web page.
  * Refreshed look and feel, including search capabilities.
  * Support a templating engine for user customizations.
  * Throw build errors for things that can easily be caught, like @param tags that don't match the parameter names.
  * Ability to include snippets of code from real source code, so we know it at least compiles.
  * Federate documentation between multiple sites.

Doclava uses [http://www.clearsilver.net/ Clearsilver] as its templating engine.

===Narrative Documentation: -htmldir and .jd files===

If -htmldir is given on the commandline, then Doclava reads all files in the given directory, including subdirectories, and depending on the extension of the file, takes one of the following actions:

====_filename_.jd====

A .jd file consists of a set of Clearsilver hdf definitions, followed by "@jd:body", and then the body text of the document.

The standard Clearjavadoc templates use the hdf node page.title to set the html `<title>` tag.

The body text of the document has the following operations performed on it:
  * It is run through the javadoc processor.  All inline javadoc tags work (like {@link}).  No out-of-line javadoc tags work (what would @return do anyway in this context?).
  * It is wrapped with the standard formatting of the documentation pages, that comes from the Clearsilver templates.

The output is then saved to _filename_.html.

{{{
page.title=Android SDK
@jd:body
<h1>Android SDK </h1>
<p>Welcome to Android!</p>
<p>This is a link to a class called {@link android.view.View}.</p>
}}}


====_filename_.cs====

The file is processed as a Clearsilver template file and saved to _filename_.html in the output directory.  Javadoc processing is not performed as it would be with .jd files.

====Otherwise====

The file is copied to the output directory unchanged.



==Command Line Flags==

===-d _dir_===

Specify where to put the output files.


===-templatedir _dir_===

Specify the directory of clearsilver template files.  You can have as many of these as you need


===-hdf _name_ _value_===

Set a value in the Clearsilver hdf namespace.  See the [http://www.clearsilver.net/docs/ Clearsilver docs] for more info.


===-htmldir _dir_===

Specify the source directory for html/jd files.  If you use this flag, you should have a file in that directory called _index.jd_.  It will turn that into the index.html, and add that as the "Main Page."  If you don't specify this flag, the packages list page will become the index.html.

You can also put files, for example, images, in this directory and they will be copied to the output directory.

See "Narrative Documentation: .jd files" below for more information on what goes in this directory.


===-title _string_===

Specify a string to use as the html page title.


===-werror===

Set this if you want anything that would be a warning to be an error.  You can use _-error_, _-warning_ or _-hide_ for finer-grained control.  See below.


===-error _number_, -warning _number_, -hide _number_===

Specify whether a given error _number_ is an error, warning, or whether to hide it altogether.  These are common documentation mistakes that can easily be caught by the tool and increase the general quality and reduce the amount of proofreading necessary.  None of these default to error because the Sun doclet allows most of these errors, and defaulting to errors would make most Java code not produce docs by default.  The best practice is to turn the warnings into errors one at a time once you have eliminated them.

|| *Error Number* || *Default* || *Description* ||
|| 1              || warning   || Unresolved @link or @see tag. ||
|| 2              || warning   || Bad {@sample } or {@include } tag. ||
|| 3              || warning   || Unknown tag.  Check for misspellings like @returns instead of @return, @throw instead of @throws, etc. ||
|| 4              || warning   || Bad @param tag name.  An @param tag references a parameter name that doesn't exist in the given method. ||
|| 5              || hidden    || Undocumented Parameter.  There is a parameter that doesn't have a corresponding @param tag.  This is really really common, so it's hidden by default ||


===-proofread _file_===

Specify a proofread file.  A proofread file contains all of the text content of the javadocs concatenated into one file, suitable for spell-checking and other goodness.


===-todo _file_===

Specify a todo file.  A todo file lists the program elements that are missing documentation.  At some point, this might be improved to show more warnings.


===-public, -protected, -package, -private, -hidden===

Specify the level of visibility to show.  -public shows only public classes, members; -protected only protected, etc.  -hidden shows everything, even program elements that have been hidden with @hide.

===-federate _name_ _site_===
Link against an external documentation site.

===Contributing to Doclava===
If you are interested in contributing to Doclava, email a project owner for commit access.